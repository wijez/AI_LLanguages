# Generated by Django 5.2.7 on 2025-10-21 06:11

import django.db.models.deletion
import pgvector.django.vector
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('languages', '0002_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='topic',
            name='embedding',
            field=pgvector.django.vector.VectorField(blank=True, dimensions=1536, null=True),
        ),
        migrations.AddField(
            model_name='topic',
            name='embedding_text',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='topic',
            name='embedding_updated_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='RoleplayScenario',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('slug', models.SlugField(max_length=150)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('level', models.CharField(choices=[('A1', 'CEFR A1'), ('A2', 'CEFR A2'), ('B1', 'CEFR B1'), ('B2', 'CEFR B2'), ('C1', 'CEFR C1'), ('C2', 'CEFR C2')], default='A1', max_length=2)),
                ('order', models.IntegerField(default=0)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('embedding', pgvector.django.vector.VectorField(blank=True, dimensions=1536, null=True)),
                ('embedding_text', models.TextField(blank=True)),
                ('embedding_updated_at', models.DateTimeField(blank=True, null=True)),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roleplay_scenarios', to='languages.topic')),
            ],
            options={
                'ordering': ['topic_id', 'order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='ScenarioSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=0)),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='languages.roleplayscenario')),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='languages.skill')),
            ],
            options={
                'ordering': ['order', 'id'],
            },
        ),
        migrations.AddField(
            model_name='roleplayscenario',
            name='skills',
            field=models.ManyToManyField(blank=True, related_name='roleplay_scenarios', through='languages.ScenarioSkill', to='languages.skill'),
        ),
        migrations.CreateModel(
            name='RoleplayBlock',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('section', models.CharField(choices=[('background', 'Background'), ('warmup', 'Warm-up Question'), ('instruction', 'Instruction'), ('dialogue', 'Dialogue Turn'), ('vocabulary', 'Vocabulary Item')], max_length=32)),
                ('order', models.IntegerField(default=0)),
                ('role', models.CharField(blank=True, choices=[('teacher', 'Teacher'), ('student_a', 'Student A'), ('student_b', 'Student B'), ('narrator', 'Narrator')], max_length=32)),
                ('text', models.TextField()),
                ('extra', models.JSONField(blank=True, default=dict)),
                ('audio_key', models.CharField(blank=True, max_length=255)),
                ('tts_voice', models.CharField(blank=True, max_length=64)),
                ('lang_hint', models.CharField(blank=True, max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('embedding', pgvector.django.vector.VectorField(blank=True, dimensions=1536, null=True)),
                ('embedding_text', models.TextField(blank=True)),
                ('embedding_updated_at', models.DateTimeField(blank=True, null=True)),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocks', to='languages.roleplayscenario')),
            ],
            options={
                'ordering': ['scenario_id', 'section', 'order', 'created_at'],
                'indexes': [models.Index(fields=['scenario', 'section', 'order'], name='languages_r_scenari_f9ef40_idx'), models.Index(fields=['section'], name='languages_r_section_48269f_idx'), models.Index(fields=['role'], name='languages_r_role_31cf34_idx')],
                'constraints': [models.UniqueConstraint(fields=('scenario', 'section', 'order'), name='uq_block_scenario_section_order')],
            },
        ),
        migrations.AddIndex(
            model_name='scenarioskill',
            index=models.Index(fields=['scenario', 'order'], name='languages_s_scenari_94b65e_idx'),
        ),
        migrations.AddIndex(
            model_name='scenarioskill',
            index=models.Index(fields=['skill', 'order'], name='languages_s_skill_i_460866_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='scenarioskill',
            unique_together={('scenario', 'skill')},
        ),
        migrations.AddIndex(
            model_name='roleplayscenario',
            index=models.Index(fields=['topic', 'order'], name='languages_r_topic_i_f550dd_idx'),
        ),
        migrations.AddIndex(
            model_name='roleplayscenario',
            index=models.Index(fields=['level'], name='languages_r_level_856298_idx'),
        ),
        migrations.AddConstraint(
            model_name='roleplayscenario',
            constraint=models.UniqueConstraint(fields=('topic', 'slug'), name='uq_roleplay_topic_slug'),
        ),
    ]
